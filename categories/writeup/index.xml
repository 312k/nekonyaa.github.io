<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writeup on nekonyaa</title><link>https://312k.github.io/nekonyaa.github.io/categories/writeup/</link><description>Recent content in Writeup on nekonyaa</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>© 2020 Powered by Hugo :: © nekonyaa</copyright><lastBuildDate>Sat, 02 Jan 2021 15:14:39 +0900</lastBuildDate><atom:link href="https://312k.github.io/nekonyaa.github.io/categories/writeup/index.xml" rel="self" type="application/rss+xml"/><item><title>BrixelCTF-312k write up</title><link>https://312k.github.io/nekonyaa.github.io/post/brixelctf-312k/</link><pubDate>Sat, 02 Jan 2021 15:14:39 +0900</pubDate><guid>https://312k.github.io/nekonyaa.github.io/post/brixelctf-312k/</guid><description>はじめに 年末から年始にかけてBrixelCTFに参加しました。 解いた問題は16問で獲得スコアが212ポイント、順位は830人中317位でした。 初めてwrite upを書いてみます。
OSINT A quick search この問題は画像からなんという名前のタワーなのか調べる問題です。Google画像検索で写真のタワーを検索しましたところ、Eben_EzerがFlagでした。
Reverse engineering / cracking Cookieee! この問題はいわゆるクッキークリッカーで10,000,000(一千万回)のクリックでFlagが表示されます。ですのでうさみみハリケーンを使ってメモリの書き換えをしました。 Vectorからうさみみハリケーンをダウンロードし、問題のファイルを実行し、UsaMimi64を起動して、リスト更新で問題ファイルを選択します。そしてAlt+Fで範囲検索を起動します。確保・記録して0を通常検索実行します。なぜ0なのかというと現在のClicks回数が0であるということはメモリのどこかに保存されているからです。残り一つになるまで値を増やします。写真では13個クッキーをクリックしました。するとアドレスが選択されるので適当に値を設定して、Flagが発見されました。no peeking! この問題は.NET Frameworkで作られた問題からFlagを探す問題です。デコンパイラがMicrosoft ストアであります。問題のファイルを開きその中のshowFlag():objectに答えが隠されていました。Old tech Goodbye old friend 2020年度いっぱいでサポートが終了したFlashplayerの問題です。ファイルを実行するとGoodbye old friendがずっと往復しています。 窓の杜からFlashplayerを展開するツールを使います。 実行してドラックアンドドロップで展開されるのでhugflashディレクトリにgoodbyeフォルダが作成されます。その中のgoodbye.logにFlagが隠されていました。Cryptography flawed この問題はパスワードハッシュからパスワードを求める問題です。32文字のmd5でハッシュされているようなのです。そのためググりハッシュリストを保存しているサイトを使います。よって答えはnotsecureとなりました。
shit(実際の問題タイトルとは異なります) この問題は合字を使った問題です。ニコニコ大百科で「たすけて」と調べると分解された内容が出てきます。ブラウザによって異なるため今回は実際には合字は使いません。 この問題tt6-mznのアドバイスによってわかりました。末尾に=があることからBase64でエンコードされたものと考えました。Base64デコードサイトでデコードするとバイナリが出てきます。バイナリをテキストに変換するサイトそれにバイナリからテキスト変換するとFlagが出てきます。
Internet Hidden Code この問題はかの有名のコナミコマンドをすると答えが出てきます
robotopia この問題は検索エンジンのクローラーの気分になってとく問題です。当サイトにもあるようにたいていのサイトにはrobots.txtがあります。よって問題のサイトのURLに/robots.txtを追加して答えが現れます。
Discord この問題のFlagはDiscordの今回のCTFのチャンネル内にありました。
login1 この問題はパスワード自体がFlagという問題です。Ctrl+Shift+Iで開発者ツールを開き要素を確認するとjavascriptでパスワードと比較している部分があります。よってif文の条件がFlagです。
Browsercheck この問題はクローラーのユーザーエージェントと比べているようです。よって開発者ツールでユーザーエージェントを偽装すると正解です。
Flat earth この問題はまず問題の管理者がログインするところを探すところから始まります。てきとうにマウスを動かすか開発者ツールの要素からログインする画面に移ります。 そして管理者ログインをします。この問題はSQLインジェクションを用いる問題です。ユーザー名に' OR 1=1--と入力するとFlagが現れます。' OR 1=1--についてはipaが解説しているサイトにあります。
Steganography Doc-ception この問題はtt6-mznの助言によって解けました。 問題ファイルにはdocxの中にdocxが入れ子のようになっているという問題です。7-zipなどで解凍するとflag.txtが見つかるので答えがわかります。
Scan me この問題はQRコードやバーコードを解いていく問題です。 まずはQRコードの中にQRコードが隠されているので開きます。QRコードは右下以外3辺に四角があります。 そのあとはただバーコードの内容を送るだけです。アプリによっては対応バーコードが少ないものもあるので適切に切り替えてください。
Rufus the vampire cat この問題は写真の中にsteghideされたテキストを探す問題です。steghideには多くのデコーダーがありますが、今回はSteganographic_Decoderを用いてデコードしました。問題の画像ファイルを選択しtext/plainと入力し、デコードするとFlagが得られました。
以上が私が解いた問題です。初めて知ったことが多くて勉強になりました。またチーム内でアドバイスができたのはよかったです。</description></item></channel></rss>